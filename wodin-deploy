#!/usr/bin/env bash
set -eEuo pipefail

cd "$(dirname "${BASH_SOURCE[0]}")"

API_BRANCH="${API_BRANCH:-main}"
APP_BRANCH="${APP_BRANCH:-main}"

API_NAME=odin.api
APP_NAME=wodin
PROXY_NAME=proxy

API_IMAGE=mrcide/odin.api:$API_BRANCH
APP_IMAGE=mrcide/wodin:$APP_BRANCH
PROXY_IMAGE=reside/proxy-nginx:master

NETWORK=wodin-nw

function wodin_pull {
    docker pull $API_IMAGE
    docker pull $APP_IMAGE
    docker pull $PROXY_IMAGE
}

function wodin_down {
    docker stop $API_NAME $APP_NAME $PROXY_NAME || /bin/true
    docker network rm $NETWORK
}

function wodin_up {
    docker network create $NETWORK
    docker run -d --name $API_NAME --rm --network=$NETWORK $API_IMAGE
    docker run -d --name $APP_NAME --rm --network=$NETWORK \
           -v $PWD/config:/config:ro \
           $APP_IMAGE /config
    docker run -d --name $PROXY_NAME --rm --network=$NETWORK \
           -v $PWD/ssl/certificate.pem:/run/proxy/certificate.pem:ro \
           -v $PWD/ssl/key.pem:/run/proxy/key.pem:ro \
           -p 443:443 -p 80:80 \
           $PROXY_IMAGE wodin:3000 wodin-dev.dide.ic.ac.uk 80 443
}

function wodin_ssl {
    export VAULT_ADDR=https://vault.dide.ic.ac.uk:8200
    export VAULT_TOKEN=$(vault login -method=github -token-only)
    mkdir -p ssl/
    vault read -field=cert "secret/wodin/ssl/dev" > ssl/certificate.pem
    vault read -field=key "secret/wodin/ssl/dev" > ssl/key.pem && \
        chmod 600 ssl/key.pem
}

case "${1-}" in
    up)
        wodin_up
        ;;
    ssl)
        wodin_ssl
        ;;
    pull)
        wodin_pull
        ;;
    down)
        wodin_down
        ;;
    *)
        echo $"Usage: $0 {up|pull|down|ssl}"
        exit 1
esac
